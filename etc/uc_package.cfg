# -------------------------------------------------------------
# Usecase Packaging
# -------------------------------------------------------------
# enable / disable job, copy the build results to CI_LFS share
LFS_CI_UC_package_can_copy_to_share < productName:LFS   > = 1
LFS_CI_UC_package_can_copy_to_share < productName:UBOOT > = 1
LFS_CI_UC_package_can_copy_to_share < productName:LTK   > = 1

# knife and developer build should not copy the results to the CI_LFS share
LFS_CI_UC_package_can_copy_to_share < productName:LFS, LFS_CI_GLOBAL_USECASE:LFS_KNIFE_PACKAGE     > =
LFS_CI_UC_package_can_copy_to_share < productName:LFS, LFS_CI_GLOBAL_USECASE:LFS_DEVELOPER_PACKAGE > =

# location on the share, where the ci results should be put on
LFS_CI_UC_package_copy_to_share_name < productName:LFS   > = /build/home/CI_LFS
LFS_CI_UC_package_copy_to_share_name < productName:UBOOT > = /build/home/${USER}/CI_LFS
LFS_CI_UC_package_copy_to_share_name < productName:LTK   > = /build/home/${USER}/CI_LFS

# subdirectories on the CI_LFs share, where the production should be put in
# TODO creatBranch add entry here
LFS_CI_UC_package_copy_to_share_path_name <                          > = Release_Candidates/FSMr3
LFS_CI_UC_package_copy_to_share_path_name < location:FSM_R4_DEV      > = Release_Candidates/FSMr4
LFS_CI_UC_package_copy_to_share_path_name < location~LRC             > = Release_Candidates/LRC
LFS_CI_UC_package_copy_to_share_path_name < productName:LTK          > = Release_Candidates/LTK

# real location / directory, where the production are stored in CI_LFS
LFS_CI_UC_package_copy_to_share_real_location <> = ${LFS_CI_UC_package_copy_to_share_name}/${LFS_CI_UC_package_copy_to_share_path_name}

# location, where the production links are stored in
# note: if you add a link in this directory, the IT scripting is triggering the sync to the remote sites
LFS_CI_UC_package_copy_to_share_link_location <> = ${LFS_CI_UC_package_copy_to_share_name}/RCversion/os

# directory for linking the productions to the build name
# .../LFS_internal/LFS/pronb-developer/build_1234 => ...../CI_LFS/Release_Candidates/FSMr3/PS_LFS_OS_2014_01_0001
LFS_CI_UC_package_internal_link <> = /build/home/${USER}/LFS_internal/${productName}/${location}

# create also a link of this "components" on the share
LFS_CI_UC_package_linking_component < location~FB1601         > = sdk
LFS_CI_UC_package_linking_component < location~MD11602        > = sdk
LFS_CI_UC_package_linking_component < location~FB1512         > = sdk
LFS_CI_UC_package_linking_component < location~FB1508         > = sdk
LFS_CI_UC_package_linking_component < location~LRC            > = sdk3
LFS_CI_UC_package_linking_component < location~FB1503         > = sdk3
LFS_CI_UC_package_linking_component < location~FB1405         > = sdk3
LFS_CI_UC_package_linking_component < location~FB1311         > = sdk2

# the first value (here sdk) will be linked in <LFS>/os/archs/<arch>/bld-tools/
LFS_CI_UC_package_linking_component <                         > = sdk pssdk sdk4 sdk5


# Mapping for packaging. Map the config from bld-foo-<cfg> to a path in /os/platforms/<cfg>
LFS_CI_map_config_to_config       < cfg:fct          > = fsm3_octeon2
LFS_CI_map_config_to_config       < cfg:fsm3_octeon2 > = fsm3_octeon2
LFS_CI_map_config_to_config       < cfg:qemu         > = qemu
LFS_CI_map_config_to_config       < cfg:qemu_64      > = qemu_64
LFS_CI_map_config_to_config       < cfg:qemu_i386    > = qemu
LFS_CI_map_config_to_config       < cfg:qemu_x86_64  > = qemu_64
LFS_CI_map_config_to_config       < cfg:fspc         > = fspc
LFS_CI_map_config_to_config       < cfg:fcmd         > = fcmd
LFS_CI_map_config_to_config       < cfg:arm          > = fsm4_k2
LFS_CI_map_config_to_config       < cfg:keystone2    > = fsm4_k2
LFS_CI_map_config_to_config       < cfg:axm          > = fsm4_axm
LFS_CI_map_config_to_config       < cfg:fsm4_axm     > = fsm4_axm
LFS_CI_map_config_to_config       < cfg:fsm4_k2      > = fsm4_k2
LFS_CI_map_config_to_config       < cfg:fsm4_arm     > = fsm4_k2
LFS_CI_map_config_to_config       < cfg:arm          > = fsm4_k2
LFS_CI_map_config_to_config       < cfg:lcpa         > = lrc-octeon2
LFS_CI_map_config_to_config       < cfg:lrc-octeon2  > = lrc-octeon2

# mapping for packaging, Mapp the config from bld-foo-<cfg> to the architecture in /os/sysroot/<arch> or /os/addons/<arch>
LFS_CI_map_config_to_architecture < cfg:fct          > = mips64-octeon2-linux-gnu
LFS_CI_map_config_to_architecture < cfg:fsm3_octeon2 > = mips64-octeon2-linux-gnu
LFS_CI_map_config_to_architecture < cfg:lcpa         > = mips64-octeon2-linux-gnu
LFS_CI_map_config_to_architecture < cfg:lrc-octeon2  > = mips64-octeon2-linux-gnu
LFS_CI_map_config_to_architecture < cfg:qemu         > = i686-pc-linux-gnu
LFS_CI_map_config_to_architecture < cfg:qemu_64      > = x86_64-pc-linux-gnu
LFS_CI_map_config_to_architecture < cfg:qemu_i386    > = i686-pc-linux-gnu
LFS_CI_map_config_to_architecture < cfg:qemu_x86_64  > = x86_64-pc-linux-gnu
LFS_CI_map_config_to_architecture < cfg:fspc         > = powerpc-e500-linux-gnu
LFS_CI_map_config_to_architecture < cfg:fcmd         > = powerpc-e500-linux-gnu
LFS_CI_map_config_to_architecture < cfg:axm          > = arm-cortexa15-linux-gnueabihf
LFS_CI_map_config_to_architecture < cfg:keystone2    > = arm-cortexa15-linux-gnueabihf
LFS_CI_map_config_to_architecture < cfg:fsm4_axm     > = arm-cortexa15-linux-gnueabihf
LFS_CI_map_config_to_architecture < cfg:fsm4_arm     > = arm-cortexa15-linux-gnueabihf
LFS_CI_map_config_to_architecture < cfg:arm          > = arm-cortexa15-linux-gnueabihf
LFS_CI_map_config_to_architecture < cfg:fsm4_k2      > = arm-cortexa15-linux-gnueabihf

# svn url / location of the sdk repository
# TODO redundant info
LFS_CI_UC_package_sdk_svn_location = https://${svnSlaveServerUlmHostName}/isource/svnroot/BTS_D_SC_LFS_SDK_1/sdk
LFS_CI_UC_package_sdk_svn_location  < USER:lfscidev >  = svn+ssh://${svnSlaveServerUlmHostName}/var/fpwork/lfscidev/svnClone/sdk/sdk
