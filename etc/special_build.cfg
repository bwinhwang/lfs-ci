# the following settings are a little bit complex, they are used in knife and developer build.
# Idea is to create a configurable way to create different result tarballs for the requestor of the knife and developer build.
# So e.g. we can configure a tarball, which contains all the files, or configure another tarball, which 
# contains only the uImages of all platforms, or a tarball, which contains only the sdk or sysroot, ...
# e.g.:
# LFS_CI_uc_special_build_package_result_files = <KEY>
# with the following three lines, you configure the content of the tarball, 
# LFS_CI_uc_special_build_package_result_files_input_files < file:<KEY> > = .
# the postfix of the tarball filename,
# LFS_CI_uc_special_build_package_result_files_output_file < file:<KEY> > = 
# and the tar options, which should be used to create the tarball
# LFS_CI_uc_special_build_package_result_files_tar_options < file:<KEY> > =
LFS_CI_uc_special_build_package_result_files < LFS_CI_GLOBAL_USECASE:LFS_KNIFE_PACKAGE     > = all 
LFS_CI_uc_special_build_package_result_files < LFS_CI_GLOBAL_USECASE:LFS_DEVELOPER_PACKAGE > = all 

LFS_CI_uc_special_build_package_result_files_input_files < file:all > = .
LFS_CI_uc_special_build_package_result_files_output_file < file:all > = 
LFS_CI_uc_special_build_package_result_files_tar_options < file:all > =

# other examples:
# LFS_CI_uc_special_build_package_result_files_input_files < file:platforms > = ./os/platforms/.
# LFS_CI_uc_special_build_package_result_files_output_file < file:platforms > = all_platforms
# LFS_CI_uc_special_build_package_result_files_tar_options < file:platforms > =

# LFS_CI_uc_special_build_package_result_files_input_files < file:fupper > = ./os/platforms/*/*/*fupper*
# LFS_CI_uc_special_build_package_result_files_output_file < file:fupper > = fupper
# LFS_CI_uc_special_build_package_result_files_tar_options < file:fupper > =

#LFS_CI_uc_special_build_package_result_files < LFS_CI_GLOBAL_USECASE:LFS_KNIFE_PACKAGE > = all_without_sysroot 
#LFS_CI_uc_special_build_package_result_files_input_files < file:all_without_sysroot    > = .
#LFS_CI_uc_special_build_package_result_files_output_file < file:all_without_sysroot    > = 
#LFS_CI_uc_special_build_package_result_files_tar_options < file:all_without_sysroot    > = 

# path to s3 (amazon s3 storage) command
TOOL_amazon_s3cmd = ${LFS_CI_ROOT}/lib/contrib/s3cmd/s3cmd

# server and path for uploading the results from usecase knife and developer build
# the server names are defined in .ssh/config
LFS_CI_upload_server      < LFS_CI_GLOBAL_USECASE:LFS_KNIFE_PACKAGE     > = s3://lfs-knives
LFS_CI_upload_server      < LFS_CI_GLOBAL_USECASE:LFS_DEVELOPER_PACKAGE > = s3://lfs-developer-builds
LFS_CI_upload_server_http < LFS_CI_GLOBAL_USECASE:LFS_KNIFE_PACKAGE     > = http://lfs-knives.s3-emean-1.eecloud.nsn-net.net/
LFS_CI_upload_server_http < LFS_CI_GLOBAL_USECASE:LFS_DEVELOPER_PACKAGE > = http://lfs-developer-builds.s3-emean-1.eecloud.nsn-net.net/
LFS_CI_upload_server_http                                                 = unsupported

# Options for creation of the tarball in usecase special build for knife and developer build
LFS_CI_uc_special_build_package_tar_options < LFS_CI_GLOBAL_USECASE:LFS_DEVELOPER_PACKAGE > = --exclude='*/sys-root/*'
LFS_CI_uc_special_build_package_tar_options < LFS_CI_GLOBAL_USECASE:LFS_KNIFE_PACKAGE     > = 
