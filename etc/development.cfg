#
# -------------------------------------------------------------
# configuration file for LFS CI
# -------------------------------------------------------------
#


# -------------------------------------------------------------
# location of the jenkins installation on the master server
jenkinsRoot <> = /var/fpwork/lfscidev/jenkins

LFS_CI_GLOBAL_username = lfscidev

# location of the ssl certificate and the private key for https of jenkins webinterface
jenkinsMasterSslCertificate <> = ${LFS_CI_ROOT}/etc/lfs-sandbox.emea.nsn-net.net.crt
jenkinsMasterSslPrivateKey  <> = ${LFS_CI_ROOT}/etc/lfs-sandbox.emea.nsn-net.net.key

# hostname (fqdn) of the jenkins master server
jenkinsMasterServerHostName <> = ulegcpeag15.emea.nsn-net.net

jenkinsMasterServerJobsPath <> = 

# http port of the jenkins master webinterface
jenkinsMasterServerHttpPort <> = 8090

# https port of the jenkins master webinterface
jenkinsMasterServerHttpsPort <> = 12443

# home directory of the jenkins master server installation
# (only valid on the master server)
jenkinsMasterServerPath <> = ${jenkinsRoot}

# directory which keeps all the jenkins jobs
# (only valid on the master server)
jenkinsMasterServerJobsPath <> = ${jenkinsMasterServerPath}/jobs

# API token of jenkins
jenkinsApiToken <> = c83b379dc70aa8aca6980666e11f941e 

# Jenkins API user.
jenkinsApiUser <> = eambrosc


# a hostname of a (random) linsee server in Ulm
LINSEE_server <                   > = linsee_server_ulm
# LINSEE_server < NODE_LABELS~cloud > = lfs_share_sync_host_oulu
LFS_CI_artifacts_storage_host <   > = linsee_server_ulm

# location on the share, where the ci results should be put on
LFS_CI_UC_package_copy_to_share_name < productName:LFS   > = /build/home/${USER}/CI_LFS
LFS_CI_UC_package_copy_to_share_name < productName:UBOOT > = /build/home/${USER}/CI_LFS
LFS_CI_UC_package_copy_to_share_name < productName:LTK   > = /build/home/${USER}/CI_LFS

# directory for linking the productions to the build name
# .../LFS_internal/LFS/pronb-developer/build_1234 => ...../CI_LFS/Release_Candidates/FSMr3/PS_LFS_OS_2014_01_0001
LFS_CI_UC_package_internal_link <> = /build/home/lfscidev/LFS_internal/${productName}/${location}

# directory, where the linux kernel sources are stored on the SC_LFS share
LFS_PROD_UC_release_copy_build_to_share_linux_kernel = /build/home/${USER}/SC_LFS/linuxkernels

# directory, where the build results are stored on the SC_LFS share
LFS_PROD_UC_release_copy_build_to_share = /build/home/${USER}/SC_LFS/releases/bld

# TODO: demx2fk3 2014-07-28 not in use, remove it
LFS_PROD_UC_ecl_update_buildresults_share = /build/home/${USER}/SC_LFS/buildresults

# -------------------------------------------------------------
# Usecase Release
# -------------------------------------------------------------

# release note stuff
LFS_email_psulm_admin     = psulm-admin@mlist.emea.nsn-intra.net
LFS_email_release_list    = lfs-release@mlist.emea.nsn-intra.net
LFS_email_release_team    = scm-lfs-prod@mlist.emea.nsn-intra.net
LFS_email_pkgpool_release = lfs-pkgpool-release@mlist.emea.nsn-intra.net


LFS_CI_uc_release_can_create_release_in_wft <> =
LFS_CI_uc_update_ecl_can_commit_ecl <>         =
LFS_CI_uc_release_can_commit_depencencies <>   =
LFS_CI_uc_release_can_create_proxy_tag <>      =
LFS_CI_uc_release_can_create_release_tag <>    =
LFS_CI_uc_release_can_create_source_tag <>     = 

LFS_CI_uc_release_can_store_build_results_on_share <> =

# flag, which is controlling the sending of the release note
LFS_CI_uc_release_can_send_release_note <> = 

CUSTOM_SCM_svn_trigger_svn_is_maintenance = 1

ADMIN_archive_share <> = /build/home/${USER}/genericCleanup

MYSQL_db_driver   = mysql
MYSQL_db_name     = test_lfspt
MYSQL_db_hostname = lfs-ci-metrics-database.dynamic.nsn-net.net
MYSQL_db_port     = 3306
MYSQL_db_username = lfspt
MYSQL_db_password = 4ObryufezAm_

LFS_PROD_label_prefix = ${USER}_

# LFS test host
# On this machine the testresults are stored
LFS_CI_test_host = ulegcpmoritz.emea.nsn-net.net
LFS_CI_testresults_dir = /lvol2/production_jenkins/test-repos/src-fsmtest

# This settings are only required for development CI
# Idea: we have a clone of BTS_SC_LFS, which we can change without changing the real repos
# But the clone is really big. If we want to recreate the repos, it will take a lot of time.
# So we have a master clone, which is in sync with the real repos and a clone, which
# can be changed by us. If we want to reset the clone, we "just" rsync the master to the clone.
ADMIN_lfs_svn_clone_master_directory = /var/fpwork/${USER}/svnClone/masterClone
ADMIN_lfs_svn_clone_working_directory = /var/fpwork/${USER}/svnClone/workingCopy

include file.cfg
